{"version":3,"sources":["components/moral-survey.png","pages/Introduction/IntroPage.js","pages/Experiment/BasicInfoPage.js","pages/Experiment/QuestionPage.js","pages/Outro-Analytics/OutroPage.js","components/HorizontalBar.js","components/ProgressBar.js","pages/Outro-Analytics/Analytics.js","firebaseConfig.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","IntroPage","opening_text","study_object","version","localStorage","getItem","className","to","Button","variant","type","size","style","margin","Component","fields","BasicInfoPage","props","updateVal","event","state","gender","age","cs","nationality","preventDefault","alert","i","length","setItem","cs_background","textAlign","width","Form","Group","controlId","Label","marginRight","ToggleButtonGroup","name","value","this","onChange","val","setState","ToggleButton","onClick","currentAgree","prevAgree","QuestionPage","handleAgree","answers","questions","currentIndex","agree","option_type","options","handleDisagree","handleNext","is_last","is_first","console","log","handlePrev","uuid","v4","split","disabled","Card","height","Header","Body","overflowY","path","d","image","img_src","image2","img_src2","isLoading","descriptions","Image","src","map","line","Text","key","marginTop","runMutation","answer","then","res","history","push","catch","error","fontSize","href","process","OutroPage","ProgressBar","percent","data","getData","setStateInterval","window","setTimeout","x","y","viewBox","standalone","animate","duration","innerRadius","cornerRadius","labels","fill","datum","color","newProps","textAnchor","verticalAnchor","text","Math","round","fontWeight","Analytics","my_average","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","App","floor","random","fullList","a","j","shuffle","pop","toString","firebase","logo","fluid","basename","exact","component","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f0217fa6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/moral-survey.41c18958.png\";","import React, { Component } from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport './IntroPage.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nexport class IntroPage extends Component {\r\n    render() {\r\n        var version = localStorage.getItem('version');\r\n        //var version = \"AI\"\r\n        var opening_text, study_object;\r\n        if (version === \"AI\") {\r\n            opening_text = \"The purpose of our project is to help machine to make better moral decision for human.\";\r\n            study_object = \"a machine\";\r\n        } else if (version === \"human\") {\r\n            opening_text = \"The purpose of our project is to study human's moral decision making process.\";\r\n            study_object = \"some other participants\"\r\n        }\r\n        return (\r\n            <div className=\"introLayout\">\r\n                <div className=\"introText\">\r\n                <p><b>Welcome to Moral Survey!</b> Thank you for agreeing to take part in this survey.</p>\r\n                <hr/>\r\n                <p>{opening_text}</p>\r\n                <p>The procedure involves filling an online survey that will take approximately <em>5 to 10 minutes</em>. The questions will be asking whether <em>if you <b>agree</b> on the decisions made by <b>{study_object}</b></em> in certain situations. Note that there is <em>no absolute answer</em> and you can freely choose the answer based on your own opinion.</p>\r\n                <hr/>\r\n                <p>Your responses will be confidential and we <em>do not</em> collect identifying information such as your name, email address or IP address.</p>\r\n                <b>Clicking on the <em>Start</em> button below indicates that you have read the above information and voluntarily agree to participate.</b>\r\n                <br/>\r\n                <br/>\r\n                <Link to=\"/basicinfo\">\r\n                    <Button variant=\"primary\" type=\"submit\" size=\"lg\" style={{margin: \"0 0 20px 0\"}}>Start</Button>\r\n                </Link>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Button, ToggleButtonGroup, ToggleButton } from 'react-bootstrap';\r\nimport './BasicInfoPage.css';\r\nimport Form from 'react-bootstrap/Form';\r\nimport { CountryDropdown } from 'react-country-region-selector';\r\nimport { Link } from 'react-router-dom';\r\n\r\nvar fields = ['gender', 'age', 'cs_background', 'nationality'];\r\nexport class BasicInfoPage extends Component {\r\n\tconstructor (props) {\r\n\t\tsuper(props);\r\n\t\t// Initialize the value if not found.\r\n\t\tfor(var i=0; i<fields.length; i++)\r\n\t\t\tif(!localStorage.getItem(fields[i]))\r\n\t\t\t\tlocalStorage.setItem(fields[i], '');\r\n\r\n\t\tthis.state = { \r\n\t\t\tgender: localStorage.getItem('gender'),\r\n\t\t\tage: localStorage.getItem('age'),\r\n\t\t\tcs_background: localStorage.getItem('cs_background'),\r\n\t\t\tnationality: localStorage.getItem('nationality'),\r\n\t\t};\r\n\t}\r\n   \r\n\tupdateVal = (event) => {\r\n\t\tif (this.state.gender==='' || this.state.age==='' || this.state.cs==='' || this.state.nationality==='') {\r\n\t\t\tevent.preventDefault();\r\n\t\t\talert(\"Please fill all information field.\");\r\n\t\t}\r\n\t\telse {\r\n\t\t\tfor(var i=0; i<fields.length; i++)\r\n\t\t\t\tlocalStorage.setItem(fields[i], this.state[fields[i]]);\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"infoLayout\">\r\n\t\t\t\t<div className=\"headerStyle\">\r\n\t\t\t\t\tGeneral Information\r\n\t\t\t\t</div>\r\n\t\t\t\t<div style={{textAlign: \"center\", width: \"90%\"}}>\r\n\t\t\t\t\t<p>To start off, we need some of your basic information for later analysis.</p>\r\n\t\t\t\t\t<p>Please fill out the below information and click <em>Proceed</em> to begin answering the questions.</p>\r\n\t\t\t\t\t<hr/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"formCenter\">\r\n\t\t\t\t\t<Form>\r\n\t\t\t\t\t\t<Form.Group controlId=\"formGender\">\r\n\t\t\t\t\t\t\t<Form.Label style={{marginRight: \"15px\"}}>Gender</Form.Label>\r\n\t\t\t\t\t\t\t<ToggleButtonGroup type=\"radio\" name=\"options\" value={this.state.gender} onChange={(val) => this.setState({gender: val})} style={{width: \"90%\"}} >\r\n\t\t\t\t\t\t\t\t<ToggleButton variant=\"outline-primary\" value={'male'}>Male</ToggleButton>\r\n\t\t\t\t\t\t\t\t<ToggleButton variant=\"outline-primary\" value={'female'}>Female</ToggleButton>\r\n\t\t\t\t\t\t\t\t<ToggleButton variant=\"outline-primary\" value={'none'}>Rather not to say</ToggleButton>\r\n\t\t\t\t\t\t\t</ToggleButtonGroup>\r\n\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t<Form.Group controlId=\"formAge\">\r\n\t\t\t\t\t\t\t<Form.Label style={{marginRight: \"15px\"}}>Age</Form.Label>\r\n\t\t\t\t\t\t\t<ToggleButtonGroup type=\"radio\" name=\"options\" value={this.state.age} onChange={(val) => this.setState({age: val})} style={{width: \"90%\"}}>\r\n\t\t\t\t\t\t\t\t<ToggleButton variant=\"outline-primary\" value={\"<19\"}>19 and below</ToggleButton>\r\n\t\t\t\t\t\t\t\t<ToggleButton variant=\"outline-primary\" value={\"20-29\"}>20-29</ToggleButton>\r\n\t\t\t\t\t\t\t\t<ToggleButton variant=\"outline-primary\" value={\"30-39\"}>30-39</ToggleButton>\r\n\t\t\t\t\t\t\t\t<ToggleButton variant=\"outline-primary\" value={\">40\"}>40 and above</ToggleButton>\r\n\t\t\t\t\t\t\t</ToggleButtonGroup>\r\n\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t<Form.Group controlId=\"formCSBackground\">\r\n\t\t\t\t\t\t\t<Form.Label style={{marginRight: \"15px\"}}>Do you have computing related background?</Form.Label>\r\n\t\t\t\t\t\t\t<ToggleButtonGroup type=\"radio\" name=\"options\" value={this.state.cs_background} onChange={(val) => this.setState({cs_background: val})}>\r\n\t\t\t\t\t\t\t\t<ToggleButton variant=\"outline-primary\" value={\"yes\"}>Yes</ToggleButton>\r\n\t\t\t\t\t\t\t\t<ToggleButton variant=\"outline-primary\" value={\"no\"}>No</ToggleButton>\r\n\t\t\t\t\t\t\t</ToggleButtonGroup>\r\n\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t<Form.Group controlId=\"formNationality\">\r\n\t\t\t\t\t\t\t<Form.Label style={{marginRight: \"15px\"}}>Nationality</Form.Label>\r\n\t\t\t\t\t\t\t<CountryDropdown value={this.state.nationality} onChange={(val) => this.setState({nationality:val})} style={{width: \"90%\"}}/>\r\n\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t</Form>\r\n\t\t\t\t\t<div className=\"buttonPadding\">\r\n\r\n          <Link to=\"/questions\">\r\n\t\t\t\t\t\t<Button variant=\"primary\" onClick={this.updateVal} type=\"submit\">\r\n\t\t\t\t\t\t\tProceed\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n","import React, { Component } from 'react';\r\nimport './QuestionPage.css';\r\nimport { Card, Button, Image } from 'react-bootstrap';\r\nimport { FirestoreMutation, FirestoreDocument } from \"@react-firebase/firestore\";\r\nimport uuid from 'uuid';\r\n\r\nvar currentAgree = 0;\r\nvar prevAgree = 0;\r\n\r\nexport class QuestionPage extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tif(!localStorage.getItem('uuid'))\r\n\t\t\tlocalStorage.setItem('uuid', uuid.v4());\r\n\t\tthis.state = {\r\n\t\t\tuuid: localStorage.getItem('uuid'),\r\n\t\t\tversion: localStorage.getItem('version'),\r\n\t\t\tquestions: localStorage.getItem('questions').split(','),\r\n\t\t\tanswers: {},\r\n\t\t\toptions: localStorage.getItem('options'),\r\n\t\t\tcurrentIndex: 0,\r\n\r\n\t\t\t//Variables with buttons\r\n\t\t\tis_first: true,\r\n\t\t\tis_last: false,\r\n\t\t}\r\n\r\n\t\tconsole.log(this.state);\r\n\t}\r\n\r\n\thandleAgree = () => {\r\n\t\tvar answers = this.state.answers;\r\n\t\tanswers[\"q\" + this.state.questions[this.state.currentIndex]] = {\r\n\t\t\tagree: true,\r\n\t\t\toption_type: this.state.options[this.state.currentIndex],\r\n\t\t}\r\n\t\tcurrentAgree = currentAgree + 10;\r\n\t\tprevAgree = 1;\r\n\t\tthis.setState({\r\n\t\t\tanswers: answers,\r\n\t\t});\r\n\t}\r\n\r\n\thandleDisagree = () => {\r\n\t\tvar answers = this.state.answers;\r\n\t\tanswers[\"q\" + this.state.questions[this.state.currentIndex]] = {\r\n\t\t\tagree: false,\r\n\t\t\toption_type: this.state.options[this.state.currentIndex],\r\n\t\t}\r\n\t\tthis.setState({\r\n\t\t\tanswers: answers,\r\n\t\t});\r\n\t}\r\n\r\n\thandleNext =  () => {\r\n\t\tif (this.state.currentIndex === 8) { this.setState({ is_last: true }); }\r\n\t\tif (this.state.currentIndex === 0) { this.setState({ is_first: false }); }\r\n\r\n\t\tif(this.state.currentIndex < 9) {\r\n\t\t\tthis.setState({\r\n\t\t\t\tcurrentIndex: this.state.currentIndex + 1,\r\n\t\t\t});\r\n\t\t\t\r\n\t\t}\r\n\t\tconsole.log(this.state.answers);\r\n\t}\r\n\r\n\thandlePrev = () => {\r\n\t\tif (prevAgree === 1) {currentAgree = currentAgree - 10};\r\n\t\tif (this.state.currentIndex === 1) { this.setState({ is_first: true }); }\r\n\t\tif (this.state.currentIndex === 9) { this.setState({ is_last: false }); }\r\n\r\n\t\tif(this.state.currentIndex > 0) {\r\n\t\t\tthis.setState({\r\n\t\t\t\tcurrentIndex: this.state.currentIndex - 1,\r\n\t\t\t});\r\n\t\t\t\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\tif(!this.state.version || !this.state.questions || !this.state.options) {\r\n\t\t\treturn <div>An error occured. Go back to <a href={process.env.PUBLIC_URL + \"/\"}>Home page</a></div>;\r\n\t\t}\r\n\t\t//{ is_first, is_last } = this.state\r\n\t\treturn (\r\n\t\t\t<div className=\"questionLayout\">\r\n\t\t\t\t<div className=\"prevButton\">\r\n\t\t\t\t\t{this.state.is_first && <Button variant=\"link\" size=\"sm\" disabled onClick={this.handlePrev}>Go back to the previous question</Button>}\r\n\t\t\t\t\t{!this.state.is_first && <Button variant=\"link\" size=\"sm\" onClick={this.handlePrev}>Go back to the previous question</Button>}\r\n\t\t\t\t</div>\r\n\t\t\t\t<Card style={{width: \"92%\", height: \"62vh\"}}>\r\n\t\t\t\t\t<Card.Header>Question {this.state.currentIndex + 1}</Card.Header>\r\n\t\t\t\t\t<Card.Body style={{overflowY: \"scroll\"}}>\r\n\t\t\t\t\t\t<FirestoreDocument path={\"/question/q\" + this.state.questions[this.state.currentIndex]}>\r\n\t\t\t\t\t\t\t{d => {\r\n\t\t\t\t\t\t\t\tconsole.log(d)\r\n\t\t\t\t\t\t\t\tconst image = (d.value ? d.value.img_src : \"no image\")\r\n\t\t\t\t\t\t\t\tconst image2 = (d.value ? d.value.img_src2 : \"no image2\")\r\n\t\t\t\t\t\t\t\tif(d.isLoading !== false) return \"\";\r\n\t\t\t\t\t\t\t\tvar content = d.value['desc_'+this.state.version];\r\n\t\t\t\t\t\t\t\tvar descriptions = content['option' + this.state.options[this.state.currentIndex]];\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t{d.value && d.value.img_src && (!d.value.img_src2) &&  \r\n\t\t\t\t\t\t\t\t\t\t<div style={{textAlign: \"center\"}}>\r\n\t\t\t\t\t\t\t\t\t\t\t<Image variant=\"top\" src={image} className=\"oneImage\" />\r\n\t\t\t\t\t\t\t\t\t\t</div>}\r\n\t\t\t\t\t\t\t\t\t\t{d.value && d.value.img_src2 && d.value.img_src2 && \r\n\t\t\t\t\t\t\t\t\t\t<div style={{textAlign: \"center\"}}>\r\n\t\t\t\t\t\t\t\t\t\t\t<Image variant=\"top\" src={image} className=\"twoImages\" />\r\n\t\t\t\t\t\t\t\t\t\t\t<Image variant=\"top\" src={image2} className=\"twoImages\" />\r\n\t\t\t\t\t\t\t\t\t\t</div>}\r\n\t\t\t\t\t\t\t\t\t\t{descriptions.split(\"\\n\").map((line, i) => <Card.Text key={i}>{line}</Card.Text>)}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t</FirestoreDocument>\r\n\t\t\t\t\t</Card.Body>\r\n\t\t\t\t</Card>\r\n\t\t\t\t<div className=\"buttonAlignment\">\r\n\t\t\t\t\t{!this.state.is_last && <Button width=\"70px\" variant=\"primary\" onClick={(event) => {this.handleAgree(); this.handleNext()}}>Agree</Button>}\r\n\t\t\t\t\t{!this.state.is_last && <Button width=\"70px\" variant=\"primary\" onClick={(event) => {this.handleDisagree(); this.handleNext()}}>Disagree</Button>}\r\n\t\t\t\t\t{this.state.is_last && \r\n\t\t\t\t\t\t<FirestoreMutation type=\"set\" path={\"/userRecord/\" + this.state.uuid} style={{marginTop: \"20px\"}}>\r\n\t\t\t\t\t\t  {({ runMutation }) => {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<Button variant=\"danger\"\r\n\t\t\t\t\t\t\t\t\tonClick={(event) => {\r\n\t\t\t\t\t\t\t\t\t\tthis.handleAgree();\r\n\t\t\t\t\t\t\t\t\t\tlocalStorage.setItem('average', currentAgree);\r\n\t\t\t\t\t\t\t\t\t\tconsole.log(localStorage.getItem('average'));\r\n\t\t\t\t\t\t\t\t\t\trunMutation({\r\n\t\t\t\t\t\t\t\t\t\t  age: localStorage.getItem('age'),\r\n\t\t\t\t\t\t\t\t\t\t  gender: localStorage.getItem('gender'),\r\n\t\t\t\t\t\t\t\t\t\t  version: localStorage.getItem('version'),\r\n\t\t\t\t\t\t\t\t\t\t  nationality: localStorage.getItem('nationality'),\r\n\t\t\t\t\t\t\t\t\t\t  answer: this.state.answers,\r\n\r\n\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t\t.then(res => {\r\n\t\t\t\t\t\t\t\t\t\t  console.log(\"Ran mutation \", res);\r\n\t\t\t\t\t\t\t\t\t\t  this.props.history.push('/outro');\r\n\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t\t.catch(error => {\r\n\t\t\t\t\t\t\t\t\t\t\talert(\"An error occured. Please retry.\");\r\n\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t<div style={{fontSize: \"15px\"}}>Agree & Submit</div>\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t  }}\r\n\t\t\t\t\t\t</FirestoreMutation>\r\n\t\t\t\t\t}\r\n\t\t\t\t\t{this.state.is_last && \r\n\t\t\t\t\t\t<FirestoreMutation type=\"set\" path={\"/userRecord/\" + this.state.uuid} style={{marginTop: \"20px\"}}>\r\n\t\t\t\t\t\t  {({ runMutation }) => {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<Button variant=\"danger\"\r\n\t\t\t\t\t\t\t\t\tonClick={(event) => {\r\n\t\t\t\t\t\t\t\t\t\tthis.handleDisagree();\r\n\t\t\t\t\t\t\t\t\t\tlocalStorage.setItem('average', currentAgree);\r\n\t\t\t\t\t\t\t\t\t\tconsole.log(localStorage.getItem('average'));\r\n\t\t\t\t\t\t\t\t\t\trunMutation({\r\n\t\t\t\t\t\t\t\t\t\t  age: localStorage.getItem('age'),\r\n\t\t\t\t\t\t\t\t\t\t  gender: localStorage.getItem('gender'),\r\n\t\t\t\t\t\t\t\t\t\t  version: localStorage.getItem('version'),\r\n\t\t\t\t\t\t\t\t\t\t  nationality: localStorage.getItem('nationality'),\r\n\t\t\t\t\t\t\t\t\t\t  answer: this.state.answers,\r\n\r\n\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t\t.then(res => {\r\n\t\t\t\t\t\t\t\t\t\t  console.log(\"Ran mutation \", res);\r\n\t\t\t\t\t\t\t\t\t\t  this.props.history.push('/outro');\r\n\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t\t.catch(error => {\r\n\t\t\t\t\t\t\t\t\t\t\talert(\"An error occured. Please retry.\");\r\n\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t<div style={{fontSize: \"15px\"}}>Disagree & Submit</div>\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t  }}\r\n\t\t\t\t\t\t</FirestoreMutation>\r\n\t\t\t\t\t}\r\n\t\t\t\t</div>\r\n\t\t\t\t{/*<div className=\"buttonPosition\">}\r\n\t\t\t\t\t{/*this.state.is_first && <Button variant=\"primary\" size=\"lg\" disabled onClick={this.handlePrev}>Prev</Button>}\r\n\t\t\t\t\t{!this.state.is_first && <Button variant=\"primary\" size=\"lg\" onClick={this.handlePrev}>Prev</Button>*/}\r\n\t\t\t\t\t{/*!this.state.is_last && <Button variant=\"primary\" size=\"lg\" onClick={this.handleNext}>Next</Button>*/}\r\n\t\t\t\t\t\r\n\t\t\t\t{/*</div>*/}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}","import React, { Component } from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { Link } from 'react-router-dom';\r\nimport './OutroPage.css';\r\n\r\n\r\nexport class OutroPage extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"outroLayout\">\r\n                <div className=\"outroText\">\r\n                    <br/>\r\n                    <br/>\r\n                    <br/>\r\n                    <br/>\r\n                    <br/>\r\n                    <br/>\r\n                    <br/>\r\n                    <br/>\r\n                    <br/>\r\n                    <br/>\r\n                    <br/>\r\n\t\t\t\t\t<p>Thank you so much for participating in the survey!</p>\r\n                    <hr/>\r\n\t\t\t\t\t<p>Moral Survey is actually <b>a blind experiment.</b></p>\r\n                    <p>Two sets of questions are randomly assigned to our participants. One tells the participants that moral decisions are all made by machine, while the other one tells that some humans have made the same moral decisions. You had only answered one of the question sets.</p>\r\n\t\t\t\t\t<hr/>\r\n                    <p>The purpose of this experiment is <em><b>to study if human has any bias on moral decisions made by machine</b>, that human may change their opinion, depending on who has made the decisions.</em></p>\r\n\t\t\t\t\t<p>This is an important experiment to measure the level of trust of human on machine, before we discuss how machine should make their moral decisions. The machine's decisions will only have its significant meaning, if human trusts its decisions, as much as other human's decisions.</p>\r\n\t\t\t\t\t<hr/>\r\n                    <p>If you are interested in our experiment or you are curious about the final result analysis, please reach us <a href=\"https://github.com/ernchern/cs489-team4\">here</a>.</p>\r\n\t\t\t\t\t<p>Thank you again for your support and participation. :)</p>\r\n                    <Link to=\"/analytics\">\r\n                        <Button variant=\"primary\" type=\"submit\">Analytics</Button>\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import  React, { Component } from 'react';\r\nimport { VictoryStack, VictoryBar, VictoryAxis, VictoryLabel } from \"victory\";\r\n\r\nclass HorizontalBar extends Component {\r\n   \r\n    render() {\r\n        const { width, height, padding, machine, human } = this.props;\r\n        console.log(height*machine.length)\r\n        return (\r\n            <div>\r\n            <svg viewBox={`0 0 ${width} ${height*machine.length}`}\r\n                style={{ width: \"100%\", height: \"auto\" }}\r\n            >\r\n                <VictoryStack horizontal\r\n                    standalone={false}\r\n                    /* setting a symmetric domain makes it much easier to center the axis  */\r\n                    domain={{ y: [-100, 100] }}\r\n                    padding={padding}\r\n                    height={height*machine.length}\r\n                    width={width}\r\n                    style={{ data: { width: 20 }, labels: { fontSize: 18 } }}\r\n                >\r\n                    <VictoryBar\r\n                        style={{ data: { fill: \"tomato\" } }}\r\n                        data={machine}\r\n                        y={(data) => (-Math.abs(data.y))}\r\n                        labels={({ datum }) => (`${Math.abs(datum.y)}%`)}\r\n                    />\r\n                    <VictoryBar\r\n                        style={{ data: { fill: \"orange\" } }}\r\n                        data={human}\r\n                        labels={({ datum }) => (`${Math.abs(datum.y)}%`)}\r\n                    />\r\n                </VictoryStack>\r\n                <VictoryAxis dependentAxis\r\n                height={height*machine.length}\r\n                width={width}\r\n                padding={padding}\r\n                style={{\r\n                    axis: { stroke: \"transparent\" },\r\n                    ticks: { stroke: \"transparent\" },\r\n                    tickLabels: { fontSize: 11, fill: \"black\" }\r\n                }}\r\n                tickLabelComponent={<VictoryLabel x={250} textAnchor=\"middle\"/>}\r\n                tickValues={machine.map((point) => point.x).reverse()}\r\n                />\r\n            </svg>\r\n            <br/>\r\n            </div>\r\n        );\r\n    };\r\n}\r\n\r\nexport default HorizontalBar;","import React, { Component } from 'react';\r\nimport { VictoryPie, VictoryAnimation, VictoryLabel } from 'victory'\r\n\r\nclass ProgressBar extends Component {\r\n    constructor() {\r\n      super();\r\n      this.state = {\r\n        percent: 0, data: this.getData(0)\r\n      };\r\n    }\r\n  \r\n\r\n    componentDidMount() {\r\n      let percent = 70;\r\n      this.setStateInterval = window.setTimeout(() => {\r\n        this.setState({\r\n          percent, data: this.getData(percent)\r\n        })\r\n      })\r\n    }\r\n  \r\n    getData(percent) {\r\n      return [{ x: 1, y: percent }, { x: 2, y: 100 - percent }];\r\n    }\r\n  \r\n    render() {\r\n      return (\r\n        <div>\r\n          <svg viewBox=\"0 0 300 300\" width=\"330px\" height=\"330px\">\r\n            <VictoryPie\r\n              standalone={false}\r\n              animate={{ duration: 1000 }}\r\n              width={300} height={300}\r\n              data={this.state.data}\r\n              innerRadius={90}\r\n              cornerRadius={25*3/4}\r\n              labels={() => null}\r\n              style={{\r\n                data: { fill: ({ datum }) => {\r\n                  const color = datum.y > 30 ? \"green\" : \"red\";\r\n                  return datum.x === 1 ? color : \"transparent\";\r\n                }\r\n                }\r\n              }}\r\n            />\r\n            <VictoryAnimation duration={1000} data={this.state}>\r\n              {(newProps) => {\r\n                return (\r\n                  <VictoryLabel\r\n                    textAnchor=\"middle\" verticalAnchor=\"middle\"\r\n                    x={150} y={150}\r\n                    text={`analysis\\n ${Math.round(newProps.percent)}% complete`}\r\n                    style={{ fontSize: 20, fontWeight: 400 }}\r\n                  />\r\n                );\r\n              }}\r\n            </VictoryAnimation>\r\n          </svg>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n export default ProgressBar;","import React, { Component } from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport './Analytics.css';\r\nimport HorizontalBar from '../../components/HorizontalBar';\r\nimport ProgressBar from '../../components/ProgressBar';\r\n\r\nconst machine_data = [\r\n    { x: \"Total\", y: 86 },\r\n  ];\r\n  \r\n  const human_data = [\r\n    { x: \"Total\", y: 26 },\r\n  ];\r\n\r\n  const machine_data_gender = [\r\n    { x: \"Male\", y: 86 },\r\n    { x: \"Female\", y: 59 },\r\n  ];\r\n  \r\n  const human_data_gender = [\r\n    { x: \"Male\", y: 73 },\r\n    { x: \"Female\", y: 79 },\r\n  ];\r\n\r\n  const machine_data_age = [\r\n    { x: \"19 and below\", y: 86 },\r\n    { x: \"20-29\", y: 81 },\r\n    { x: \"30-39\", y: 73 },\r\n    { x: \"40 and above\", y: 63 },\r\n  ];\r\n  \r\n  const human_data_age = [\r\n    { x: \"19 and below\", y: 58 },\r\n    { x: \"20-29\", y: 63 },\r\n    { x: \"30-39\", y: 70 },\r\n    { x: \"40 and above\", y: 83 },\r\n  ];\r\n\r\n  \r\n  const width = 500;\r\n  const height = 80;\r\n  const padding = { top: 30, bottom: 50, left: 20, right: 20 };\r\n\r\n\r\n\r\nexport class Analytics extends Component {\r\n    render() {\r\n        var version = localStorage.getItem('version');\r\n        var my_average = localStorage.getItem('average');\r\n\r\n        //Hardcoded whether to show analytics or not \r\n        var show_analytics = false;\r\n        return (\r\n            <div className=\"overallLayout\">\r\n                <div className=\"centerElements\">\r\n                    <div style={{fontWeight: 400}}><br/>Your trust level on <b>{version}</b> is</div>\r\n                    <div className=\"resultText\">{my_average}%</div>\r\n                    <hr/>\r\n\r\n                    {!show_analytics && \r\n                    <div className=\"explanationText\">\r\n                        <br/>\r\n                        We still don't have enough data to show the overall analytics.\r\n                        Please come back later to <a href=\"https://ernchern.github.io/cs489-team4/#/cs489-team4/analytics\">this link</a>.\r\n                        <ProgressBar></ProgressBar>\r\n                    </div>}\r\n                    {show_analytics && \r\n                    <div>\r\n                        <p>Below are the overall analytics: </p>\r\n                        <br/>\r\n                        <p>Overall result</p>\r\n                        <HorizontalBar width={width} height={height} padding={padding} machine={machine_data} human={human_data}></HorizontalBar>\r\n                        <br/>\r\n\r\n                        <p>Result by gender</p>\r\n                        <HorizontalBar width={width} height={height} padding={padding} machine={machine_data_gender} human={human_data_gender}></HorizontalBar>\r\n                        <br/>\r\n\r\n                        <p>Result by age</p>\r\n                        <HorizontalBar width={width} height={height} padding={padding} machine={machine_data_age} human={human_data_age}></HorizontalBar>\r\n                        <br/>\r\n                    </div>}  \r\n\r\n                    <Button href=\"outro\" variant=\"primary\" type=\"submit\">Go Back</Button>\r\n                    \r\n                    \r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","const firebaseConfig = {\r\n  apiKey: \"AIzaSyCOUd1lmmjMlPqVrg5HztvYWbAAV-cjIYo\",\r\n  authDomain: \"cs489-team-4.firebaseapp.com\",\r\n  databaseURL: \"https://cs489-team-4.firebaseio.com\",\r\n  projectId: \"cs489-team-4\",\r\n  storageBucket: \"cs489-team-4.appspot.com\",\r\n  messagingSenderId: \"72131328035\",\r\n  appId: \"1:72131328035:web:b0ec224f6212453c1d9996\",\r\n  measurementId: \"G-P84YC6N7BK\"\r\n};\r\n\r\nexport default firebaseConfig;","/* eslint-disable no-unused-expressions */\r\nimport React, { Component } from 'react';\r\nimport './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { IntroPage } from './pages/Introduction/IntroPage';\r\nimport { BasicInfoPage } from './pages/Experiment/BasicInfoPage';\r\nimport { QuestionPage } from './pages/Experiment/QuestionPage';\r\nimport { OutroPage } from './pages/Outro-Analytics/OutroPage';\r\nimport { Analytics } from './pages/Outro-Analytics/Analytics';\r\nimport {HashRouter, Route} from 'react-router-dom';\r\nimport { Button, Image } from 'react-bootstrap';\r\nimport firebase from 'firebase';\r\nimport { FirestoreProvider } from \"@react-firebase/firestore\";\r\nimport firebaseConfig from './firebaseConfig';\r\nimport logo from './components/moral-survey.png';\r\nimport uuid from 'uuid';\r\n\r\nfunction shuffle(a) {\r\n    var j, x, i;\r\n    for (i = a.length - 1; i > 0; i--) {\r\n      j = Math.floor(Math.random() * (i + 1));\r\n      x = a[i];\r\n      a[i] = a[j];\r\n      a[j] = x;\r\n    }\r\n    return a;\r\n}\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    if(!localStorage.getItem('version')) {\r\n      console.log(\"local storage saved\", 'version');\r\n      var version = Math.floor(Math.random() * 2) ? \"AI\" : \"human\";\r\n      localStorage.setItem('version', version);\r\n    }\r\n    if(!localStorage.getItem('questions')) {\r\n      // WE HARDCODE THE NUMBER OF QUESTIONS HERE. MODIFY THIS IF WE HAVE MORE\r\n      // QUESTIONS.\r\n      const numQuestions = 14;\r\n      var fullList = [];\r\n      for(var i=0; i<numQuestions; i++) fullList.push(i+1);\r\n      shuffle(fullList);\r\n      while(fullList.length > 10) fullList.pop();\r\n      localStorage.setItem('questions', fullList.toString());\r\n    }\r\n    if(!localStorage.getItem('options')) {\r\n      var options = '';\r\n      for(i=0; i<10; i++) options += (Math.floor(Math.random() * 2) ? \"A\" : \"B\");\r\n        localStorage.setItem('options', options);\r\n    }\r\n    if(!localStorage.getItem('uuid'))\r\n      localStorage.setItem('uuid', uuid.v4());\r\n  }\r\n  \r\n  render() {\r\n    return(\r\n      <FirestoreProvider {...firebaseConfig} firebase={firebase}>\r\n        <div className=\"screenPadding\">\r\n\r\n          <div style={{textAlign: \"center\"}}>\r\n            <Button href={process.env.PUBLIC_URL + \"/\"} variant=\"link\" size=\"sm\"><Image src={logo} fluid /></Button>\r\n          </div>\r\n          <div className=\"divPadding\">\r\n            <HashRouter basename={process.env.PUBLIC_URL}>\r\n              <Route exact path=\"/\" component={IntroPage}/>\r\n              <Route exact path=\"/intro\" component={IntroPage} />\r\n              <Route exact path=\"/basicinfo\" component={BasicInfoPage} />\r\n              <Route exact path=\"/questions\" component={QuestionPage} />\r\n              <Route exact path=\"/outro\" component={OutroPage} />\r\n              <Route exact path=\"/analytics\" component={Analytics} />\r\n            </HashRouter>\r\n          </div>\r\n        </div>\r\n      </FirestoreProvider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App/>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}